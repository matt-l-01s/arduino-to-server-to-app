#include <SPI.h>
#include <WiFi.h>
#include <WiFiClient.h>

// Constant Variables
const int buttonPins[2] = {34, 35};
const unsigned long coolTime = 1000;

// Changing Variables
int buttonStates[2] = {0,0};
unsigned long buttonPushedTime[2] = {0, 0};
byte visitorNum[2] = {0, 0}; // Output
int input = Serial.read();

// Connect to wifi and server
byte serverIP[] = { 180, 235, 234, 95 };
int serverPort = 9005;
char ssid[] = "";      
char pass[] = ""; 
char Header[] = { 0x1, 0x3, 'S', 'I', 'T',};

WiFiClient client;

void setup() {
  // put your setup code here, to run once:

  // Setting pins as input
  // Setting pins as input
  pinMode(buttonPins[0], INPUT);
  pinMode(buttonPins[1], INPUT);
  Serial.begin(115200); // Baud Rate 115200

  WiFi.begin(ssid, pass);
  int TTL = 20;
  Serial.println("Connecting to WiFi");
  Serial.print("SSID: ");
  Serial.println(ssid);
  while( WiFi.status() != WL_CONNECTED && --TTL>=0) {
    delay(500);
    Serial.print(".");
  }
  if( WiFi.status() != WL_CONNECTED) {
    Serial.println("\nCouldn't get a wifi connection");
    return;
  }
  Serial.println("\nConnected to wifi with IP Address: ");
  Serial.println(WiFi.localIP());

  client.connect(serverIP, serverPort);
  TTL = 20;
  Serial.print("Connecting to Server");
  delay(5000);
  while( !client.connected() && --TTL>=0) {
    client.connect(serverIP, serverPort);
    delay(50000);
    Serial.print(".");
  }
  if( !client.connected()) {
    Serial.println("Couldn't get a Server connection");
    return;
  }
  Serial.println("\nConnected to Server");
  client.write(Header);

  client.write("Visitors In | Visitors Out");
}


void loop() {
  // put your main code here, to run repeatedly:
  buttonStates[0] = digitalRead(buttonPins[0]);
  buttonStates[1] = digitalRead(buttonPins[1]);
  
  counter();
  display();
  delay(1000);
}

void display(){
  Serial.print(visitorNum[0]);
  Serial.print(visitorNum[1]);
  //Serial.print(exitbutton1Pushcounter);
  //Serial.print(exitbutton2Pushcounter);
  Serial.println();
  }

void counter(){
  for(int i=0; i <=2; i++){
    if(buttonStates[i] == HIGH){
      unsigned long nowTime = millis();
      if(nowTime - buttonPushedTime[i] > coolTime){
        visitorNum[i]++;
        buttonPushedTime[i] = nowTime;
      }
    }
  }
}

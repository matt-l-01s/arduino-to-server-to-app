#include <SPI.h>
#include <WiFi.h>
#include <WiFiClient.h>

// Constant Variables
const int buttonPins[2] = {34, 35};

// Changing Variables
byte pushCounters[2] = {0,0};
int buttonStates[2] = {0,0};
int previous_buttonState[2] = {0,0};
int input = Serial.read();

// Connect to wifi and server
byte serverIP[] = { 180, 235, 234, 95 };
int serverPort = 9005;
char ssid[] = "Annchewce3-TIME2.4Ghz";       // My WiFi SSID
char pass[] = "4QaPz5HC9";   // My WiFi Password
char Header[] = { 0x1, 0x3, 'S', 'I', 'T',};
WiFiClient client;

void setup() {
  // Setting pins as input and starting the serial monitor
  pinMode(buttonPins[0], INPUT);
  pinMode(buttonPins[1], INPUT);
  Serial.begin(115200); // Baud Rate 115200

  // Connecting to WiFi
  WiFi.begin(ssid, pass);
  int TTL = 20;
  Serial.println("Connecting to WiFi");
  Serial.print("SSID: ");
  Serial.println(ssid);
  while( WiFi.status() != WL_CONNECTED && --TTL>=0) {
    delay(500);
    Serial.print(".");
  }
  if( WiFi.status() != WL_CONNECTED) {
    Serial.println("\nCouldn't get a wifi connection");
    return;
  }
  Serial.println("\nConnected to wifi with IP Address: ");
  Serial.println(WiFi.localIP());

  // Connecting to server
  client.connect(serverIP, serverPort);
  TTL = 20;
  Serial.print("Connecting to Server");
  delay(5000);
  while( !client.connected() && --TTL>=0) {
    client.connect(serverIP, serverPort);
    delay(50000);
    Serial.print(".");
  }
  if( !client.connected()) {
    Serial.println("Couldn't get a Server connection");
    return;
  }
  Serial.println("\nConnected to Server");
  client.write(Header);
}

void loop() {
  buttonStates[0] = digitalRead(buttonPins[0]);
  buttonStates[1] = digitalRead(buttonPins[1]);

  // Counter for Entrance Button 
  if(buttonStates[0] != previous_buttonState[0]){
    if(buttonStates[0] == HIGH){
      pushCounters[0]++;
      }
     input = 'A';
    }

  // Counter for Exit Button 
  if(buttonStates[1] != previous_buttonState[1]){
    if(buttonStates[1] == HIGH){
      pushCounters[1]++;
      }
     input = 'A';
    }

  /*/ Counter for Exit Button 1
  if( != ){
    if( == HIGH){
      ++;
      }
     input = 'A';
    }
    
  // Counter for Exit Button 2
  if( != ){
    if( == HIGH){
      ++;
      }
     input = 'A';
    }*/
   
  delay(1000);
  if(input == 'A'){
    display();
    sendtoserver();
  }
}


void display(){
  Serial.print(String(pushCounters[0])+"\t"+String(pushCounters[1]));
  Serial.println();
  }

void sendtoserver(){
  client.write(pushCounters, sizeof(pushCounters));
  }
